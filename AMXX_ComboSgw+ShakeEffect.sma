/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>
#include <engine>
#include <fakemeta>
#include <fakemeta_util>
#include <hamsandwich>
#include <cstrike>
#include <fun>
#define PLUGIN "New Plug-In"
#define VERSION "1.0"
#define AUTHOR "author"
#define Keys (1<<0) // Keys: 1

// Task offsets
enum (+= 150)
{
	TASK_UNCAL = 2200,
	TASK_MBALIK,
}
new cvar_combo_sgw[2],active_combo[33], cvarx[5]
public plugin_init() {
	register_plugin(PLUGIN, VERSION, AUTHOR)
	register_forward(FM_CmdStart, "Forward_Command_Start")
	register_clcmd("csx_kuy2","csx_dmg")
	cvar_combo_sgw[0] = register_cvar("csx_combo_sgw","0.3")
	cvar_combo_sgw[1] = register_cvar("csx_combo_slot","1")
	cvarx[0] = register_cvar("csx_shake_x","3")
	cvarx[1] = register_cvar("csx_shake_y","1")
	cvarx[2] = register_cvar("csx_shake_z","3")
	cvarx[3] = register_cvar("csx_shake_time","0.5")
	cvarx[4] = register_cvar("csx_shake","0")
	
}
public Forward_Command_Start(id, uc_handle, seed)
{
	if (!is_user_alive(id)) 
		return
	static CurButton
	CurButton = get_uc(uc_handle, UC_Buttons)
	if( ( CurButton & IN_BACK ) || ( CurButton & IN_MOVERIGHT ) || ( CurButton & IN_FORWARD ) || ( CurButton & IN_MOVELEFT ) )
	{	
		if(get_pcvar_num(cvarx[4]))	
		{
			static Float:ShakeTime[512];
			if((ShakeTime[id]+get_pcvar_float(cvarx[3]))<get_gametime())
			{
				ShakeTime[id]=get_gametime()
				message_begin(MSG_ONE_UNRELIABLE, get_user_msgid("ScreenShake"), _, id)
				write_short((1<<12) * get_pcvar_num(cvarx[0])) 
				write_short((1<<12) * get_pcvar_num(cvarx[1])) 
				write_short((1<<12) * get_pcvar_num(cvarx[2])) 
				message_end()
			}
		}
	}
	
	if(CurButton & IN_USE)
	{
		if(active_combo[id])
		{
			remove_task(TASK_UNCAL+id)
			client_cmd(id,"slot3;-attack2")
		}
	}
}
public csx_dmg(id)
{
	if(!active_combo[id]) {
	active_combo[id] = 1 
	Functionx(id)
	}
	else active_combo[id] = 0
}

public Functionx(id)
{
	
	client_cmd(id,"slot3;+attack2")
	if(task_exists(TASK_UNCAL+id))remove_task(TASK_UNCAL+id)
	set_task(get_pcvar_float(cvar_combo_sgw[0]),"Functionx2",TASK_UNCAL+id)
	
	
}
public Functionx2(taskid)
{
	new id = taskid - TASK_UNCAL
	client_cmd(id,"slot%d",get_pcvar_num(cvar_combo_sgw[1]))
	set_task(get_pcvar_float(cvar_combo_sgw[0]),"Functionx",id)
}
/*
public Function(id)
{
	if(get_user_weapon(id)!=CSW_HEGRENADE)
	{
		client_cmd(id,"slot4;+attack")
	}
}

public Function2(id)
{
	client_cmd(id,"-attack")
	if(task_exists(TASK_MBALIK+id))remove_task(TASK_MBALIK+id)
	set_task(2.0,"Function3",TASK_MBALIK+id)
}

public Function3(taskid)
{
	new id = taskid - TASK_MBALIK
	client_cmd(id,"slot1")	
}*/

